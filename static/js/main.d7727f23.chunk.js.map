{"version":3,"sources":["components/Navigation/Navigation.tsx","utils/api.ts","components/Loader/Loader.tsx","utils/findParents.ts","components/PersonNav/PersonNav.tsx","components/PersonComponent/PersonComponent.tsx","components/PersonTable/PersonTable.tsx","components/People/People.tsx","App.tsx","index.tsx"],"names":["Navigation","to","title","className","isActive","classNames","BASE_URL","getPeople","delay","url","options","method","Promise","resolve","setTimeout","then","fetch","response","json","Loader","findParents","peopleData","name","find","person","PersonNav","sex","PersonComponent","born","died","fatherName","motherName","slug","isSelected","mother","father","PeopleTable","selectedPerson","map","People","useState","setPeopleData","isEmpty","setIsEmpty","hasError","setHasError","useEffect","length","catch","useParams","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d7727f23.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const Navigation: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io/react_people-table/api/';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nexport function getPeople(\n  url = 'people.json',\n  method: RequestMethod = 'GET',\n): Promise<[]> {\n  const options: RequestInit = { method };\n\n  return wait(500)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nexport const findParents = (\n  peopleData: Person[],\n  name: string | null,\n) => peopleData.find(person => person.name === name);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  name: string | null;\n  sex: string;\n};\n\nexport const PersonNav: React.FC<Props> = ({ to, name, sex }) => (\n  <NavLink\n    to={`/people/${to}`}\n    className={classNames({ 'has-text-danger': sex === 'f' })}\n  >\n    {name}\n  </NavLink>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonNav } from '../PersonNav';\n\ntype Props = {\n  person: Person;\n  isSelected: boolean;\n  mother: Person | undefined;\n  father: Person | undefined;\n};\n\nexport const PersonComponent: React.FC<Props> = ({\n  person: {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  },\n  isSelected,\n  mother,\n  father,\n}) => (\n  <tr\n    data-cy=\"person\"\n    className={classNames({ 'has-background-warning': isSelected })}\n  >\n    <td>\n      <PersonNav\n        to={slug}\n        name={name}\n        sex={sex}\n      />\n    </td>\n\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>\n      {mother\n        ? (\n          <PersonNav\n            to={mother.slug}\n            name={mother.name}\n            sex={mother.sex}\n          />\n        ) : (\n          motherName || '-'\n        )}\n    </td>\n\n    <td>\n      {father\n        ? (\n          <PersonNav\n            to={father.slug}\n            name={father.name}\n            sex={father.sex}\n          />\n        ) : (\n          fatherName || '-'\n        )}\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport { Person } from '../../types';\nimport { findParents } from '../../utils/findParents';\nimport { PersonComponent } from '../PersonComponent';\n\ntype Props = {\n  peopleData: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peopleData,\n  selectedPerson,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleData.map((person) => {\n          const mother = findParents(peopleData, person.motherName);\n          const father = findParents(peopleData, person.fatherName);\n\n          return (\n            <PersonComponent\n              key={person.slug}\n              person={person}\n              isSelected={person.slug === selectedPerson}\n              mother={mother}\n              father={father}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../utils/api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PersonTable';\n\nexport const People: React.FC = () => {\n  const [peopleData, setPeopleData] = useState([]);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        setIsEmpty(!response.length);\n        setPeopleData(response);\n      })\n      .catch(() => setHasError(true));\n  }, []);\n\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {peopleData.length\n        ? (\n          <PeopleTable\n            peopleData={peopleData}\n            selectedPerson={slug}\n          />\n        ) : (\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {(!hasError && !isEmpty) && (\n                <Loader />\n              )}\n\n              {hasError && (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className=\"has-text-danger\"\n                >\n                  Something went wrong\n                </p>\n              )}\n\n              {isEmpty && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </div>\n          </div>\n        )}\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { People } from './components/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navigation\n            to=\"/\"\n            title=\"Home\"\n          />\n\n          <Navigation\n            to=\"/people\"\n            title=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={<People />}\n            />\n\n            <Route\n              path=\":slug\"\n              element={<People />}\n            />\n          </Route>\n\n          <Route\n            path=\"/*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}